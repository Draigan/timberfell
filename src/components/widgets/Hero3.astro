---
import { Icon } from 'astro-icon/components';
import { twMerge } from 'tailwind-merge';
import Button from '~/components/ui/Button.astro';
import heroBackgroundDefault from '~/assets/images/test1.jpg';

import type { CallToAction, Hero as HeroProps } from '~/types';

interface Props extends Partial<HeroProps> {
  eyebrow?: string;
  heading?: string;
  description?: string;
  actions?: CallToAction[];
  formTitle?: string;
  formSubtitle?: string;
  formButtonText?: string;
  image?: string | { src: string };
  collapsible?: boolean;
  defaultCollapsed?: boolean;
}

const {
  id,
  tagline,
  eyebrow = tagline,
  heading = 'Professional tree care trusted across the Kawarthas',
  description = 'ISA-certified arborists delivering insured removals, structural pruning, and rapid-response storm work so your property stays safe, healthy, and beautiful year-round.',
  actions = [],
  image = heroBackgroundDefault,
  formTitle = 'Request a quote',
  formSubtitle,
  formButtonText = 'Send request',
  collapsible = true,
  defaultCollapsed = true,
} = Astro.props as Props;

const displayEyebrow = eyebrow ?? tagline;
const hasEyebrow = Boolean(displayEyebrow);
const actionItems = Array.isArray(actions) ? actions : [];
const hasActions = actionItems.length > 0;

const backgroundUrl =
  typeof image === 'string'
    ? image
    : typeof image === 'object' && image !== null && 'src' in image
      ? (image as { src: string }).src
      : heroBackgroundDefault.src;

const formClasses =
  'bg-white/90 backdrop-blur-md rounded-2xl border border-brand-forest/10 p-6 shadow-xl text-brand-body dark:bg-brand-midnight/80 dark:text-white dark:border-brand-spruce/30';
const inputClasses =
  'w-full rounded-xl border border-brand-forest/20 bg-white/95 px-4 py-3 text-brand-body shadow-sm placeholder:text-brand-body/60 focus:border-accent/60 focus:outline-none focus:ring-2 focus:ring-accent/40 dark:border-brand-spruce/30 dark:bg-brand-midnight/60 dark:text-white dark:placeholder:text-white/60';
const buttonClasses =
  'inline-flex w-full items-center justify-center gap-2 rounded-xl bg-accent px-5 py-3 text-base font-semibold text-white shadow-lg shadow-accent/30 transition hover:bg-accent/90 focus:outline-none focus:ring-2 focus:ring-accent/50 focus:ring-offset-2 focus:ring-offset-white dark:focus:ring-offset-brand-midnight';
const mobileDetailsProps = !defaultCollapsed && collapsible ? { open: true } : {};
---

<section class="relative overflow-hidden not-prose" {...(id ? { id } : {})}>
  <div class="absolute inset-0">
    <div class="absolute inset-0 bg-cover bg-center bg-no-repeat" style={`background-image: url(${backgroundUrl});`}></div>
    <div class="absolute inset-0 bg-black/35 mix-blend-multiply dark:bg-black/55"></div>
    <div class="absolute inset-0 bg-gradient-to-r from-black/45 via-black/30 to-transparent dark:from-black/60 dark:via-black/40 dark:to-transparent"></div>
  </div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6">
    <div class="py-16 sm:py-24 lg:py-28">
      <div class="grid gap-10 lg:gap-16 items-center text-white md:grid-cols-[minmax(0,1fr)_minmax(0,0.9fr)]">
        <div class="space-y-6">
          {hasEyebrow && (
            <p class="text-sm font-semibold tracking-[0.35em] uppercase text-accent/85 intersect-once motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade intersect-quarter">
              {displayEyebrow}
            </p>
          )}
          <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold leading-tight tracking-tight intersect-once motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade intersect-quarter">
            {heading}
          </h1>
          {description && (
            <p class="text-lg sm:text-xl text-white/90 max-w-2xl intersect-once motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade intersect-quarter">
              {description}
            </p>
          )}
          {hasActions && (
            <div class="flex flex-col sm:flex-row gap-4 intersect-once motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade intersect-quarter">
              {actionItems.map((action, index) => (
                <Button
                  {...action}
                  class={twMerge(
                    'w-full sm:w-auto',
                    index === 0
                      ? ''
                      : 'border-white/70 text-white hover:bg-white/15 hover:border-white/70 hover:text-white'
                  )}
                />
              ))}
            </div>
          )}
        </div>
        <div class="w-full intersect-once motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade intersect-quarter">
          <form class={`hidden md:block ${formClasses}`}>
            <h2 class="text-xl font-semibold text-brand-heading dark:text-white mb-2">{formTitle}</h2>
            {formSubtitle && (
              <p class="text-sm text-brand-body/80 dark:text-white/70 mb-4">{formSubtitle}</p>
            )}
            <div class="grid gap-4">
              <label class="block">
                <span class="sr-only">Name</span>
                <input type="text" name="name" placeholder="Name" class={inputClasses} required />
              </label>
              <label class="block">
                <span class="sr-only">Phone</span>
                <input type="tel" name="phone" placeholder="Phone" class={inputClasses} required />
              </label>
              <label class="block">
                <span class="sr-only">Address or service area</span>
                <input type="text" name="address" placeholder="Address or service area" class={inputClasses} />
              </label>
              <label class="block">
                <span class="sr-only">Describe the tree work you need</span>
                <textarea
                  name="details"
                  rows="4"
                  placeholder="Describe the tree work you need"
                  class={inputClasses}
                ></textarea>
              </label>
              <button type="submit" class={buttonClasses}>
                {formButtonText}
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>

{collapsible ? (
  <div class="md:hidden px-4 sm:px-6 pb-12">
    <details class={`group ${formClasses}`} {...mobileDetailsProps}>
      <summary class="flex cursor-pointer items-center justify-between gap-4 text-brand-heading dark:text-white list-none [&::-webkit-details-marker]:hidden">
        <span class="text-lg font-semibold">{formTitle}</span>
        <span class="flex h-9 w-9 items-center justify-center rounded-full bg-accent/15 text-accent transition group-open:rotate-180 animate-bounce-slow group-open:animate-none">
          <Icon name="tabler:chevron-down" class="h-5 w-5" />
        </span>
      </summary>
      <form class="mt-4 grid gap-4">
        {formSubtitle && <p class="text-sm text-brand-body/80 dark:text-white/70">{formSubtitle}</p>}
        <label class="block">
          <span class="sr-only">Name</span>
          <input type="text" name="name" placeholder="Name" class={inputClasses} required />
        </label>
        <label class="block">
          <span class="sr-only">Phone</span>
          <input type="tel" name="phone" placeholder="Phone" class={inputClasses} required />
        </label>
        <label class="block">
          <span class="sr-only">Address or service area</span>
          <input type="text" name="address" placeholder="Address or service area" class={inputClasses} />
        </label>
        <label class="block">
          <span class="sr-only">Describe the tree work you need</span>
          <textarea
            name="details"
            rows="4"
            placeholder="Describe the tree work you need"
            class={inputClasses}
          ></textarea>
        </label>
        <button type="submit" class={buttonClasses}>
          {formButtonText}
        </button>
      </form>
    </details>
  </div>
) : (
  <div class="md:hidden px-4 sm:px-6 pb-12">
    <form class={formClasses}>
      <h2 class="text-xl font-semibold text-brand-heading dark:text-white mb-2">{formTitle}</h2>
      {formSubtitle && <p class="text-sm text-brand-body/80 dark:text-white/70 mb-4">{formSubtitle}</p>}
      <div class="grid gap-4">
        <label class="block">
          <span class="sr-only">Name</span>
          <input type="text" name="name" placeholder="Name" class={inputClasses} required />
        </label>
        <label class="block">
          <span class="sr-only">Phone</span>
          <input type="tel" name="phone" placeholder="Phone" class={inputClasses} required />
        </label>
        <label class="block">
          <span class="sr-only">Address or service area</span>
          <input type="text" name="address" placeholder="Address or service area" class={inputClasses} />
        </label>
        <label class="block">
          <span class="sr-only">Describe the tree work you need</span>
          <textarea
            name="details"
            rows="4"
            placeholder="Describe the tree work you need"
            class={inputClasses}
          ></textarea>
        </label>
        <button type="submit" class={buttonClasses}>
          {formButtonText}
        </button>
      </div>
    </form>
  </div>
)}
