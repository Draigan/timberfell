---
import { SITE, APP_BLOG } from 'astrowind:config';
import { getHomePermalink } from '~/utils/permalinks';
import { findLatestPosts } from '~/utils/blog';
import type { Post } from '~/types';

interface Link {
  text?: string;
  href?: string;
}

export interface Props {
  secondaryLinks?: Array<Link>;
  posts?: Array<Post>;
  footNote?: string;
  theme?: string;
}

const {
  secondaryLinks = [],
  posts = [],
  footNote = 'Made by Draigan All rights reserved',
  theme = 'light',
} = Astro.props as Props;

const baseLinks = [
  { text: 'Home', href: '/' },
  { text: 'Services', href: '/services' },
  { text: 'About', href: '/about' },
  { text: 'Contact', href: '/contact' },
  { text: 'Blog', href: '/blog' },
];

const quickLinks = [...baseLinks, ...(secondaryLinks ?? [])];
const uniqueQuickLinks = Array.from(
  new Map(quickLinks.map((link) => [link.href ?? link.text ?? '#', link])).values()
);

const serviceAreas = ['Lindsay', 'Peterborough', 'Bobcaygeon', 'Fenelon Falls', 'Kawartha Lakes townships'];
const rawPosts = posts.length ? posts : APP_BLOG.isEnabled ? await findLatestPosts({ count: 4 }) : [];
const mobilePosts = rawPosts.slice(0, 4);
const desktopPosts = rawPosts.slice(0, 2);
---

<footer class:list={[{ dark: theme === 'dark' }, 'relative border-t border-gray-200 dark:border-slate-800 not-prose']}>
  <div class="dark:bg-dark absolute inset-0 pointer-events-none" aria-hidden="true"></div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 py-12 dark:text-slate-300 space-y-10 intersect-once intersect-quarter intersect-no-queue motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade">
    <div class="grid grid-cols-1 gap-10 text-[0.95rem] leading-relaxed text-muted md:grid-cols-4 md:text-base">
      <div class="space-y-4">
        <p class="text-sm font-semibold uppercase tracking-[0.3em] text-accent/80">Quick Links</p>
        <ul class="grid grid-cols-2 gap-x-4 gap-y-2 text-sm font-semibold uppercase tracking-wide text-muted/80">
          {uniqueQuickLinks.map(({ text, href }) => (
            <li>
              <a class="hover:text-gray-700 dark:hover:text-gray-200 transition duration-150 ease-in-out" href={href}>
                {text}
              </a>
            </li>
          ))}
        </ul>
      </div>
      <div class="space-y-4">
        <p class="text-sm font-semibold uppercase tracking-[0.3em] text-accent/80">Contact</p>
        <div class="space-y-2 text-muted/90">
          <p>
            Phone: <a class="font-semibold text-gray-900 dark:text-white" href="tel:+17053345678">(705) 334-5678</a>
          </p>
          <p>
            Email: <a class="font-semibold text-gray-900 dark:text-white hover:text-accent" href="mailto:hello@timberfell.ca">hello@timberfell.ca</a>
          </p>
          <p>Mon–Sat · 8:00–18:00</p>
          <p>Emergency crews on call 24/7</p>
        </div>
      </div>
      <div class="space-y-4">
        <p class="text-sm font-semibold uppercase tracking-[0.3em] text-accent/80">Service Area</p>
        <ul class="grid grid-cols-2 gap-2 text-muted/90">
          {serviceAreas.map((area) => (
            <li>{area}</li>
          ))}
        </ul>
      </div>
      <div class="space-y-4">
        <p class="text-sm font-semibold uppercase tracking-[0.3em] text-accent/80">Latest Posts</p>
        {mobilePosts.length ? (
          <>
            <div class="space-y-3 text-muted/90 md:hidden">
              {mobilePosts.map(({ title, excerpt, permalink, publishDate, image }) => (
                <article class="flex gap-3">
                  {image && (
                    <a
                      href={permalink ?? '#'}
                      class="inline-block h-16 w-16 flex-shrink-0 overflow-hidden rounded-md border border-gray-200/70 bg-white/70 shadow-sm"
                    >
                      <img
                        src={typeof image === 'string' ? image : image?.src}
                        alt={typeof image === 'string' ? title ?? '' : image?.alt ?? ''}
                        class="h-full w-full object-cover"
                        loading="lazy"
                      />
                    </a>
                  )}
                  <div class="space-y-1">
                    {publishDate && (
                      <span class="text-xs font-semibold uppercase tracking-wide text-accent/80">
                        {new Date(publishDate).toLocaleDateString(undefined, { month: 'short', day: 'numeric', year: 'numeric' })}
                      </span>
                    )}
                    <a href={permalink ?? '#'} class="block font-semibold text-gray-900 dark:text-white hover:text-accent">
                      {title ?? 'Untitled'}
                    </a>
                    {excerpt && <p class="text-sm text-muted/70 line-clamp-2">{excerpt}</p>}
                  </div>
                </article>
              ))}
            </div>
            <div class="hidden gap-4 text-muted/90 md:grid md:grid-cols-2 lg:grid-cols-2">
              {desktopPosts.map(({ title, permalink, publishDate, image }) => (
                <article class="space-y-2 rounded-lg border border-gray-200/70 bg-white/80 p-4 md:pl-0 md:pr-4 shadow-sm backdrop-blur dark:border-slate-700 dark:bg-slate-900/70">
                  {image && (
                    <a
                      href={permalink ?? '#'}
                      class="block overflow-hidden rounded-md border border-gray-200/70 bg-white shadow-sm"
                    >
                      <img
                        src={typeof image === 'string' ? image : image?.src}
                        alt={typeof image === 'string' ? title ?? '' : image?.alt ?? ''}
                        class="h-24 w-full object-cover"
                        loading="lazy"
                      />
                    </a>
                  )}
                  {publishDate && (
                    <span class="text-xs font-semibold uppercase tracking-wide text-accent/80">
                      {new Date(publishDate).toLocaleDateString(undefined, { month: 'short', day: 'numeric', year: 'numeric' })}
                    </span>
                  )}
                  <a href={permalink ?? '#'} class="block text-sm font-semibold text-gray-900 dark:text-white hover:text-accent">
                    {title ?? 'Untitled'}
                  </a>
                </article>
              ))}
            </div>
          </>
        ) : (
          <p class="text-muted/80 text-sm">Seasonal advice and project highlights are coming soon.</p>
        )}
      </div>
    </div>

    <div class="border-t border-gray-200 pt-6 text-center text-sm text-muted dark:border-slate-700">
      <Fragment set:html={footNote} />
    </div>
  </div>
</footer>
